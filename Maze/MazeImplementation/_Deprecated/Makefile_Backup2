# Wesley Partch's Makefile
# Written: 10/17/2023
# Last Edited: 10/19/2023
#
# This Makefile is made for Powershell on a Windows machine and is generalized for use across different projects.
# This Makefile will create and link object files all throughout the directory it is in.
# Ideally, the only lines you may want to alter in this make file are:
#	`EXECUTABLE = ...` if you wish to rename the produced executable file
#	`ROOT_PATH = ...` if you wish to specify the project's root directory
#	`EXE_PATH = ...` if you wish to specify the executable's destination
#	`EXCLUDE = ...` if you wish to specify files and/or directories (reletive to this Makefile) to exclude from compilation (Use `\` for navigation and `%` as a wildcard)
#	`INCLUDE = ...` if you wish to specify files and/or directories (reletive to this Makefile) to include from compilation (Use `\` for navigation and `%` as a wildcard; Don't specify `.cpp` for individual files) (priority over exclude)

# --------- #
# Variables #
# --------- #

# Compiler
CXX = g++
# Compiler Flags
CXXFLAGS = -g -O3 -Wpedantic -Wall -Wextra -Wmisleading-indentation -Wunused -Wuninitialized -Wshadow -Wconversion -Werror -std=c++17

# Executable File Name
EXECUTABLE = main
# Object Files
OBJECTS = $(SOURCES:.cpp=.o)
# Source Files
SOURCES = $(shell powershell Get-ChildItem -Recurse -Filter *.cpp -Name)
EXCLUDE = _Deprecated\DepTest% MapFactory% Nonexistant%
SOURCES := $(filter-out $(EXCLUDE), $(SOURCES))
INCLUDE = MapFactory%  _Deprecated\DepTest\DepTestCopy
SOURCES += $(filter-out $(SOURCES), $(filter $(INCLUDE), $(shell powershell Get-ChildItem -Recurse -Filter *.cpp -Name)))

# Path to the root file from this Makefile
ROOT_PATH = .
# Path to the executable destination from this Makefile
EXE_PATH = .

# ----- #
# Rules #
# ----- #

# Rule to build object files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $<

# -------------------- #
# Compilation Commands #
# -------------------- #

.PHONY: all clean rebuild

# Default `make` command; Builds object files and executable
all: $(EXECUTABLE)

# Builds object files and executable by linking object files together
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(CXXFLAGS) -o $(EXE_PATH)/$(EXECUTABLE) $(OBJECTS)

# Cleans project by deleting executable and all files generated on compilation
clean:
	powershell rm * -Include *.exe, *.o, *.gcov, *.gcno, *.gcda -Recurse -ErrorAction Ignore; $$null

# Cleans project and recompiles from the ground up
rebuild:
	make clean
	powershell clear
	powershell clear
	make $(EXECUTABLE)

# ----- #
# Other #
# ----- #

.PHONY: check

# Use to check what are being read as Source files to ensure the program is being compiled correctly
check:
	@echo "SOURCES:"
	@echo $(SOURCES)